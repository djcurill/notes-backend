{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","services","getAll","axios","get","then","res","data","create","newNote","post","update","id","updatedNote","put","App","useState","notes","setNotes","setNewNote","showAll","setShowAll","useEffect","console","log","noteService","response","length","notesToShow","filter","o","map","find","n","changedNote","toggleImportanceOf","onSubmit","event","preventDefault","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"yKAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCNpCI,EAAU,8BAuBDC,EANE,CACfC,OAhBa,WAEb,OADYC,IAAMC,IAAIJ,GACXK,MAAK,SAACC,GAAD,OAASA,EAAIC,SAe7BC,OAZa,SAACC,GAEd,OADYN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAW7BI,OARa,SAACC,EAAIC,GAElB,OADYV,IAAMW,IAAN,UAAad,EAAb,YAAwBY,GAAMC,GAC/BR,MAAK,SAACC,GAAD,OAASA,EAAIC,UCoEhBQ,EA9EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETP,EAFS,KAEAU,EAFA,OAGcH,oBAAS,GAHvB,mBAGTI,EAHS,KAGAC,EAHA,KAqBhBC,qBARa,WACXC,QAAQC,IAAI,mBACZC,EAAYvB,SAASG,MAAK,SAACqB,GACzBH,QAAQC,IAAI,qBACZN,EAASQ,QAIG,IAEhBH,QAAQC,IAAI,SAAUP,EAAMU,OAAQ,SAEpC,IAAMC,EAAcR,EAChBH,EACAA,EAAMY,QAAO,SAACC,GAAD,OAAuB,IAAhBA,EAAEjC,aAsB1B,OACE,gCACE,uCACA,8BACE,yBACEE,QAAS,WACPsB,GAAYD,IAFhB,kBAKQA,EAAU,YAAc,WAGlC,6BACGQ,EAAYG,KAAI,SAACrC,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA7DD,SAACiB,GAC1B,IAAMlB,EAAOuB,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAErB,KAAOA,KAClCsB,EAAW,2BAAQxC,GAAR,IAAcG,WAAYH,EAAKG,YAChD4B,EAAYd,OAAOC,EAAIsB,GAAa7B,MAAK,SAACC,GACxCY,EAASD,EAAMc,KAAI,SAACrC,GAAD,OAAWA,EAAKkB,KAAOA,EAAKN,EAAMZ,SAyDvByC,CAAmBzC,EAAKkB,MAF3ClB,EAAKkB,SAMhB,uBAAMwB,SAzCM,SAACC,GACfA,EAAMC,iBACN,IAAM5B,EAAO,CACXZ,QAASW,EACT8B,MAAM,IAAIC,MAAOC,cACjB5C,UAAW6C,KAAKC,SAAW,GAC3B/B,GAAIK,EAAMU,OAAS,GAGrBxB,IAAMsB,YAAYjB,OAAOE,GAAML,MAAK,SAACqB,GACnCR,EAASD,EAAM2B,OAAOlB,IACtBP,EAAW,QA8BX,UACE,uBAAO0B,MAAOpC,EAASqC,SA3BJ,SAACT,GACxBlB,EAAWkB,EAAMU,OAAOF,OACxBtB,QAAQC,IAAI,cAAea,EAAMU,OAAOF,UA0BpC,wBAAQG,KAAK,SAAb,yBCzERC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.426b7adc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/notes';\n\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  return req.then((res) => res.data);\n};\n\nconst create = (newNote) => {\n  const req = axios.post(baseUrl, newNote);\n  return req.then((res) => res.data);\n};\n\nconst update = (id, updatedNote) => {\n  const req = axios.put(`${baseUrl}/${id}`, updatedNote);\n  return req.then((res) => res.data);\n};\n\nconst services = {\n  getAll: getAll,\n  create: create,\n  update: update,\n};\n\nexport default services;\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport axios from 'axios';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    noteService.update(id, changedNote).then((res) => {\n      setNotes(notes.map((note) => (note.id === id ? res : note)));\n    });\n  };\n\n  const hook = () => {\n    console.log('Initiating hook');\n    noteService.getAll().then((response) => {\n      console.log('Promise fulfilled');\n      setNotes(response);\n    });\n  };\n\n  useEffect(hook, []);\n\n  console.log('render', notes.length, 'notes');\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((o) => o.important === true);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const post = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    axios.noteService.create(post).then((response) => {\n      setNotes(notes.concat(response));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n    console.log('New note is', event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button\n          onClick={() => {\n            setShowAll(!showAll);\n          }}\n        >\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}